"""
Django settings for mpesa_c2b project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n&o2a$d=1l^ojr^=vpq27n=53kk_ub(+&6p^t73#rz3r@xo+61'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
import os
from pathlib import Path
from dotenv import load_dotenv
load_dotenv()

ALLOWED_HOSTS = ['.trycloudflare.com', 'localhost', '127.0.0.1', '.vercel.app']
#ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'payments',
    
    
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    "corsheaders",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware', 
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",  # If testing locally
    "https://2e36-102-209-137-62.ngrok-free.app",

]

CORS_ALLOW_ALL_ORIGINS = True

# settings.py
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',           
    ],
}
CSRF_USE_SESSIONS = False


# settings.py

ROOT_URLCONF = 'mpesa_c2b.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'payments/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mpesa_c2b.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

import os
from dotenv import load_dotenv
load_dotenv()

#mpesa
# Mpesa API Credentials
MPESA_ENVIRONMENT = os.getenv('MPESA_ENVIRONMENT', default='sandbox')
CONSUMER_KEY = os.getenv('CONSUMER_KEY')
CONSUMER_SECRET = os.getenv('CONSUMER_SECRET')

# STK Push Configurations
STK_SHORTCODE = os.getenv('STK_SHORTCODE')
STK_PASSKEY = os.getenv('STK_PASSKEY')
STK_CALLBACK_URL = os.getenv('STK_CALLBACK_URL')

# B2C Configurations
B2C_INITIATOR_NAME = os.getenv('B2C_INITIATOR_NAME')
B2C_SECURITY_CREDENTIAL = os.getenv('B2C_SECURITY_CREDENTIAL')
B2C_SHORTCODE = os.getenv('B2C_SHORTCODE')
B2C_QUEUE_TIMEOUT_URL = os.getenv('B2C_QUEUE_TIMEOUT_URL')
B2C_RESULT_URL = os.getenv('B2C_RESULT_URL')

# C2B Configurations
C2B_SHORTCODE = os.getenv('C2B_SHORTCODE')
C2B_CONFIRMATION_URL = os.getenv('C2B_CONFIRMATION_URL')
C2B_VALIDATION_URL = os.getenv('C2B_VALIDATION_URL')

BASE_URL = os.getenv('BASE_URL')
# SIGNUP TOKEN EXPIRATION
# settings.py
from datetime import timedelta

SIMPLE_JWT = {
    'TOKEN_OBTAIN_SERIALIZER': 'accounts.serializers.CustomTokenObtainPairSerializer',
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=int(os.getenv('ACCESS_TOKEN_EXP'))),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=int(os.getenv('REFRESH_TOKEN_EXP'))),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256', 
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # If using JWT:
        'rest_framework_simplejwt.authentication.JWTAuthentication',
       # 'accounts.authentication.CustomJWTAuthentication',
        # Or if using Token auth:
        # 'rest_framework.authentication.TokenAuthentication',
    ],
    
}

#email setup

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_SSL = True
EMAIL_USE_TLS = False
EMAIL_HOST = 'mail.gre8i.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'gre8-intelligence@gre8i.com'
EMAIL_HOST_PASSWORD = 'JHce09wgVffuqWG'
DEFAULT_FROM_EMAIL = 'Mkash <intelligence@mkash.com>'